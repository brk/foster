<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>foster</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~F</string>
	<key>name</key>
	<string>Foster</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.foster</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.foster</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>In case this regex seems unusual for an infix operator, note that Foster allows any ordinary function application (elem 4 [1..10]) to be rewritten as an infix expression (4 `elem` [1..10]).</string>
			<key>match</key>
                        <string>(`)[a-zA-Z_][0-9a-zA-Z_=!?+*&lt;&gt;-]*(`)</string>
			<key>name</key>
			<string>keyword.operator.function.infix.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(\)</string>
			<key>name</key>
			<string>constant.language.unit.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(</string>
			<key>name</key>
			<string>punctuation.paren.left.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\)</string>
			<key>name</key>
			<string>punctuation.paren.right.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>;</string>
			<key>name</key>
			<string>punctuation.semicolon.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(case|type|effect|prim|snafuinclude|foreign|import)\b</string>
			<key>name</key>
			<string>keyword.other.foster</string>
		</dict>
		<dict>
			<key>match</key>
                        <string>\b(of|as|end|let|REC)\b</string>
			<key>name</key>
			<string>keyword.minor.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|then|else|handle)\b</string>
			<key>name</key>
			<string>keyword.control.foster</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Floats are always decimal</string>
			<key>match</key>
			<string>\b([+-]?[0-9]+\.[0-9]+([eE][+-]?[0-9]+)?|[0-9]+[eE][+-]?[0-9]+)\b</string>
			<key>name</key>
			<string>constant.numeric.float.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([+-]?[0-9]+(`[0-9]+)*|0([xb][0-9a-fA-F]+(`[0-9a-fA-F]+)*))\b</string>
			<key>name</key>
			<string>constant.numeric.foster</string>
                </dict>
		<dict>
			<key>begin</key>
			<string>([rb]?)(")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
                                        <string>punctuation.definition.string.prefix.foster</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.foster</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.foster</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.foster</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\([nt\\\"'\&amp;])</string>
					<key>name</key>
					<string>constant.character.escape.foster</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\x[0-9A-Fa-f][0-9A-Fa-f]</string>
					<key>name</key>
					<string>constant.character.escape.hexadecimal.foster</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.foster</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.foster</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.hexadecimal.foster</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.foster</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
			(')
			(?:
				[\ -\[\]-~]								# Basic Char
			  | (\\(?:[nt\\\"'\&amp;]))		# Escapes
			  | (\\x[0-9A-Fa-f]+)						# Hexadecimal Escapes
			  # | (\^[A-Z@\[\]\\\^_])						# Control Chars
			)
			(')
			</string>
			<key>name</key>
			<string>string.quoted.single.foster</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*([a-z_][a-zA-Z0-9_']*|\([|!%$+\-.,=&lt;/&gt;]+\))\s*(::)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.foster</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.double-colon.foster</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>meta.function.type-declaration.foster</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_signature</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(Just|Nothing|Left|Right|True|False|LT|EQ|GT)\b</string>
			<key>name</key>
			<string>support.constant.foster</string>
		</dict>
                <dict>
                  <key>match</key>
                  <string>-&gt;</string>
                  <key>name</key>
                  <string>keyword.other.arrow.foster</string>
                </dict>
                <dict>
                  <key>match</key>
                  <string>=&gt;</string>
                  <key>name</key>
                  <string>keyword.other.big-arrow.foster</string>
                </dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>match</key>
                        <string>\b(print_i8|print_i8x|print_i32|print_i32x|print_i64|print_i64x|print_text)\b</string>
			<key>name</key>
			<string>support.function.prelude.foster</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#infix_op</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>In case this regex seems overly general, note that Foster permits the definition of new operators which can be nearly any string of punctuation characters, such as $%^&amp;*.</string>
			<key>match</key>
			<string>(?x)
                          (?:
                            [=!?+*&lt;&gt;-]              # SYMBOL_MULTI_START
                               [a-zA-Z/^_=!?+*&lt;&gt;-]  # SYMBOL_CONTINUE_NDIG
                            [0-9a-zA-Z/^_=!?+*&lt;&gt;-]* # SYMBOL_CONTINUE*
                          |
                            [&lt;&gt;+*?!-]                 # SYMBOL_COMMON
                          | \|
                            [/^_=!?+*&lt;&gt;-]             # AFTER_PIPE
                            [0-9a-zA-Z/^_=!?+*&lt;&gt;-]*   # SYMBOL_CONTINUE*
			  )
                        </string>
			<key>name</key>
			<string>keyword.operator.foster</string>
		</dict>
		<dict>
			<key>match</key>
                        <string>[a-zA-Z][_0-9a-zA-Z|!%$?~+*\-.=&lt;/&gt;\\]+</string>
			<key>name</key>
			<string>identifier.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>,</string>
			<key>name</key>
			<string>punctuation.separator.comma.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\$</string>
			<key>name</key>
			<string>punctuation.dollarsign.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>=</string>
			<key>name</key>
			<string>punctuation.equals.foster</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\^</string>
			<key>name</key>
			<string>operator.postfix.caret.foster</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block_comment</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>\/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.foster</string>
				</dict>
			</dict>
			<key>end</key>
                        <string>\*\/</string>
			<key>name</key>
			<string>comment.block.foster</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.foster</string>
						</dict>
					</dict>
					<key>match</key>
                                        <string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.foster</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
		<key>infix_op</key>
		<dict>
			<key>match</key>
                        <string>\(([&lt;&gt;+*?!-]|\|[/^_=!?+*&lt;&gt;-][a-zA-Z/^_=!?+*&lt;&gt;-])\)</string>
			<key>name</key>
			<string>entity.name.function.infix.foster</string>
                </dict>
		<key>type_signature</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>-&gt;</string>
					<key>name</key>
					<string>keyword.other.arrow.foster</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.other.big-arrow.foster</string>
				</dict>
				<dict>
					<key>match</key>
					<string>@</string>
					<key>name</key>
					<string>keyword.other.minor.atsign.foster</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>keyword.other.minor.percentsign.foster</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>keyword.other.minor.verticalbar.foster</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Int|Maybe|Either|Bool|Float64|Text|Ord)\b</string>
					<key>name</key>
					<string>support.type.prelude.foster</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-z][a-zA-Z0-9_']*\b</string>
					<key>name</key>
					<string>variable.other.generic-type.foster</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[A-Z][a-zA-Z0-9_']*\b</string>
					<key>name</key>
					<string>storage.type.foster</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\(\)</string>
					<key>name</key>
					<string>support.constant.unit.foster</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.foster</string>
        <key>uuid</key>
        <string>3ECA5C54-DF7D-11E7-80C1-9A214CF093AE</string>
</dict>
</plist>
