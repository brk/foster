
type case Ord
       of $LT
       of $EQ
       of $GT
       ;

notBool = { a:Bool => if a then False else True end };
eqBool = { a:Bool => b:Bool => if a then b else notBool b end };

cmpBoolTrueLT = { a : Bool => b : Bool =>
  if a then if b then EQ !
                 else LT !
            end
       else if b then GT !
                 else EQ !
            end
  end
};

ordInvert = { b : Ord =>
  case b
    of $LT -> GT !
    of $GT -> LT !
    of _   -> b
  end
};

ordInvertIf = { b : Ord => cnd : Bool =>
  if cnd then ordInvert b else b end
};

// notLT
//
isGE = { o : Ord =>
  case o
    of $LT -> False
    of _   -> True
  end
};

isEQ = { o : Ord =>
  case o
    of $EQ -> True
    of _   -> False
  end
};

textOfOrd = { o : Ord =>
  case o
    of $LT -> "LT"
    of $EQ -> "EQ"
    of $GT -> "GT"
  end
};
