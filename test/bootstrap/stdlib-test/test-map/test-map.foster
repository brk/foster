snafuinclude Maps "map";

print_i64_f_pair_bare = { p =>
  case p of (kf, vf) ->
    print_text_bare "(";
    print_i64_bare (kf !);
    print_text_bare ",";
    print_i64_bare (vf !);
    print_text_bare ")";
  end
};

print_pbil = { lst =>
  print_text_bare "[";
  listFoldl lst { p => unit => print_i64_f_pair_bare p; print_text_bare ", "; () } ();
  print_text "]";
};

main = {
  lst =(Cons ({ 0 }, { 0 })
       (Cons ({ 1 }, { 1 })
       (Cons ({ 2 }, { 2 })
       (Cons ({ 4 }, { 4 })
       (Cons ({ 5 }, { 5 })
       (Cons ({ 6 }, { 6 })
       (Cons ({ 1 }, { 7 })
       Nil)))))));

  cmp = { f1 => f2 => cmpSInt64 (f1 !) (f2 !) };

  shwTextPair = { t1 => t2 => mkTextConcat "("
                              (mkTextConcat
                               (mkTextConcat t1 ",")
                               (mkTextConcat t2 ")")) };
  shw = { kf => vf => shwTextPair (tmp_Text_of_Int64 (kf !))
                                  (tmp_Text_of_Int64 (vf !)) };

  expect_text "[(0,0), (1,1), (2,2), (4,4), (5,5), (6,6), (1,7), ]";
  print_pbil lst;

  expect_text "[(0,0), (1,7), (2,2), (4,4), (5,5), (6,6), ]";
  print_pbil (mapToList (mapOfList lst cmp));

};