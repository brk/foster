main = {
  let x = threedotthree-partone !; in
    expect_i32 33;
    print_i32 x;
  end
};

k = { forall a b, x:a => y:b => y };
q = { forall t:Type, x:t => y:t => y };

f1 = { f:{B => B => B} => print_i32 0; B 0 };

f2b = { f: (forall a:Boxed, { a => a => a }) => print_i32 1; B 1 };

// TODO higher-order unboxed polymorphism should be flagged eagerly.
f2t = { f: (forall a:Type, { a => a => a }) => print_i32 1; B 1 };

threedotthree-partone = {
  // f1 ::            { B => B => B } => B
  // k  :: forall a b,{ a => b => b };
  // So k must be instantiated as k:[B,B].
  expect_i32 0;
  f1 k;

  // spurious typechecking failure
  //expect_i32 1;
  //f2b { forall b:Boxed, x:b => y:b => y };

  expect_i32 1;
  f2b k;

  33
};

type case B of $B Int32;
