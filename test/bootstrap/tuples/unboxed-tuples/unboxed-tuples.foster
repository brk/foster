main = {
  build-unboxed !;
};

build-unboxed = {
  let a = prim tuple-unboxed 1 2 3; in
     expect_i32 0;
     force_gc_for_debugging_purposes !;
     print_i32 0;
  end
};

build-boxed = {
  let a = prim tuple 1 2 3; in
     expect_i32 0;
     force_gc_for_debugging_purposes !;
     print_i32 0;
  end
};

build-unboxed-ref = {
  let t = prim tuple-unboxed 1 2 3;
      a = (prim ref t); in
     expect_i32 0;
     force_gc_for_debugging_purposes !;
     print_i32 0;
  end
};

/*
  This gets K-normalized to:
        let t = prim tuple 1 2 3;
            a = (prim ref t); in ... end
  Which yields the following layout:

         stack    |   heap
                  |
        [  a  ]---|---->[ * ]-----------+
                  |                     |
        [  t  ]---|---->[ 1 | 2 | 3 ]<--+
                  |
*/
build-boxed-ref = {
  let a = (prim ref prim tuple 1 2 3); in
     expect_i32 0;
     force_gc_for_debugging_purposes !;
     print_i32 0;
  end
};
