main = {
  let j00 = expect_i32 222;
      j01 = print_i32 if true then 222 else 111 end;

      j02 = expect_i32 111;
      j03 = print_i32 if false then 222 else 111 end;

  //expect_i1 false;
  //print_i1(false + false)
  //
  //expect_i1 true;
  //print_i1(false + true)
  //
  //expect_i1 true;
  //print_i1(true + false)
  //
  //expect_i1 false;
  //print_i1(true + true)

     j04 = expect_i1 false; // no operator overloading, yet
     j05 = print_i1 (__COMPILES__ (1, 2) + (3, 4));

  //expect_i1 false;
  //print_i1(__COMPILES__ -true);

     j06 = expect_i1 true;
     j08 = print_i1 (primitive_bitnot_i1 false);

     j09 = expect_i1 false; // 2 is not of type i1
     j10 = print_i1 (__COMPILES__ if 2 then 222 else 111 end);

     j11 = expect_i1 false; // tuple should typecheck elements
     j12 = print_i1 (__COMPILES__ (if 2 then 2 else 1 end, 2));
  in 0 end
};

