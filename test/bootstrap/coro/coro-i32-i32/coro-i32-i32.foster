// IN: 2 3 5 8 13

// coro_wrap = forall a b,
//             fn (f : fn(arg : a to b)) {
//               let c = coro_create(f) in {
//                 fn (arg : a) { coro_invoke(c, a) }
//               }
//             }

main = {
  expect_i32 999999;
  expect_i32 10;
  expect_i32 120;

  print_i32 999999;
  let co = coro_create { x : i32 =>
                           let a = coro_yield:[i32,i32] x;
                               b = coro_yield:[i32,i32] (a + 20);
                            in 0 end
                        };
      x = coro_invoke co 10;
      y = coro_invoke co 100;
   in
     print_i32 x;
     print_i32 y;
  end
};
