main = {
  t1 !;
  t2 !;
  t3 !;
  t5 !;
  tuple-cloconv !;
  t10 !;
  t11 !;
  t12 !;
  t13 !;
  case-gcroots !;
};

tuple-cloconv = {
  // This test ensures that bindings introduced by pattern matching
  // can be successfully closed over.
  f = case (1, 2) of (_, b) -> { b } end;
  expect_i32 2;
  print_i32 (f !)
};

t1 = {
  expect_i32 1;
  print_i32
    case opaquely_i32 1
      of a -> a
    end;
};

t2 = {
  expect_i32 2;
  print_i32
    case (opaquely_i32 1, opaquely_i32 1)
      of (a, b) -> a +Int32 b
    end;
};

t3 = {
  expect_i32 3;
  print_i32
    case opaquely_i32 1
      of 2 -> 4
      of 1 -> 3
      of a -> a
    end;
};


t4 = {
  expect_i32 4;
  print_i32
    case opaquely_i32 4
      of 2 -> 5
      of 1 -> 3
      of a -> a
    end;
};

// Ensure that subsequent (un-taken) matches do not mess us up.
t5 = {
  expect_i32 5;
  print_i32
    case (opaquely_i32 3, opaquely_i32 5)
      of (3, b) -> b
      of (c, d) -> 12345
    end;
};


t10 = {
  expect_i32 10;
  print_i32
    case (opaquely_i32 1, opaquely_i32 2)
      of (3, b) -> 2 +Int32 b
      of a -> 10
    end;
};

t11 = {
  expect_i32 11;
  print_i32
    case (opaquely_i32 1, opaquely_i32 2, opaquely_i32 3)
      of (a, 3, b) -> b
      of (a, 2, c) -> 8 +Int32 c
      of (a, d, c) -> d
    end;
};

t12 = {
  expect_i32 123;
  print_i32
    case (opaquely_i32 1, opaquely_i32 2, opaquely_i32 3)
      of (_, _, _) -> 123
      of (_, _, _) -> 1
    end;
};

t13 = {
  expect_i32 5;
  print_i32
    case (opaquely_i32 5, (1, opaquely_i32 2))
      of (3, (a, b)) -> a +Int32 b
      of z      -> case z of (w, _) -> w end
    end;
};

let-gcroot = {
    let r = (prim ref 2);
     in force_gc_for_debugging_purposes !;
        expect_i32 2;
        print_i32 r^;
    end;
};

case-gcroots = {
    let-gcroot !;
    // Make sure that the reference is not passed from
    // the case to the branch in a register (for coyping GC visibility).
    case (prim ref 2)
      of r -> force_gc_for_debugging_purposes !;
              expect_i32 2;
              print_i32 r^;
    end;
};
