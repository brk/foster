hof-while = { t : {Bool} => b : {Int32} =>
  if t ! then b !; hof-while t b
          else 0 end
};

main = {
  variant-one !;
  variant-two !;
};

variant-one = {
  expect_i32 0;
  expect_i32 1;
  expect_i32 2;
  let v = (ref 0);
      n = opaquely_i32 3;
   in
     hof-while { v^ <Int32 n } {
       print_i32 v^ ; (v^ +Int32 1) >^ v ; 0
     }
     ; 0
  end
};

variant-two = {
  expect_i32 0;
  expect_i32 1;
  expect_i32 2;
  let v = (ref 0);
      n = opaquely_i32 3;
   in
     hof-while { v^ <Int32 n } {
       print_i32 v^ ; (v^ +Int32 1) >^ v ; 0
     }
     // This once triggered a bug where the closure pairs passed to hof-while
     // were being stack-allocated, and TCO resulted in them being clobbered.
  end
};

// TODO check this
// hof-while-unit = { t : {Bool} => b : { () } =>
//   if t ! then b !; hof-while-unit t b
//           else () end
// };
