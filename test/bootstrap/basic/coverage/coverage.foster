
main = {
//expect_i1 False; print_i1 (__COMPILES__ ((case { 0 } of _ -> () end) !));

// syntax error...
//expect_i1 False; print_i1 (__COMPILES__ ((case { 0 } of { f } -> f end) !));

/*
expect_i1 False; print_i1 (__COMPILES__ (case { 0 } of _ -> () end));
expect_i1 False; print_i1 (__COMPILES__ ({ 0 } x));
expect_i1 False; print_i1 (__COMPILES__ (case { forall t:Type, x : t => 0 } of _ -> () end));
expect_i1 False; print_i1 (__COMPILES__ ({ forall t:Type, x : t => 0 } x));
*/
//expect_i1 False; print_i1 (__COMPILES__ (case (case { 0 } of _ -> () end) of _ -> () end));
//expect_i1 False; print_i1 (__COMPILES__ (case ({ 0 } x) of _ -> () end));
/*
expect_i1 False; print_i1 (__COMPILES__ (({ 0 } x) x));
expect_i1 False; print_i1 (__COMPILES__ (case (case { forall t:Type, x : t => 0 } of _ -> () end) of _ -> () end));
expect_i1 False; print_i1 (__COMPILES__ (case ({ forall t:Type, x : t => 0 } x) of _ -> () end));
expect_i1 False; print_i1 (__COMPILES__ ((case { forall t:Type, x : t => 0 } of _ -> () end) x));
expect_i1 False; print_i1 (__COMPILES__ (({ forall t:Type, x : t => 0 } x) x));
expect_i1 False; print_i1 (__COMPILES__ (({ 0 }) >^ ({ 0 })));
expect_i1 False; print_i1 (__COMPILES__ (({ 0 }) >^ ({ forall t:Type, x : t => 0 })));
expect_i1 False; print_i1 (__COMPILES__ (({ forall t:Type, x : t => 0 }) >^ ({ 0 })));
expect_i1 False; print_i1 (__COMPILES__ (({ forall t:Type, x : t => 0 }) >^ ({ forall t:Type, x : t => 0 })));
*/
()

};


