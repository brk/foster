main = fn(to i32) {
  // Mismatch between declared and inferred return types
  expect_i1(true) ; print_i1(__COMPILES__  fn(to i32) { 0 }  )
  expect_i1(false); print_i1(__COMPILES__  fn(to i32) { true }  )

  // Mismatch between expected and actual types
  expect_i1(true) ; print_i1(__COMPILES__          (a())  )
  expect_i1(false); print_i1(__COMPILES__  print_i1(a())  )

  // Incorrect number of arguments to function
  expect_i1(true);  print_i1(__COMPILES__  (fn(to i32) { 0 }())  )
  expect_i1(false); print_i1(__COMPILES__  (fn(to i32) { 0 }(0))  )

  expect_i1(true);  print_i1(__COMPILES__  a()  )
  expect_i1(false); print_i1(__COMPILES__  a(0)  )


  // Duplicate variable names
  expect_i1(true)  ; print_i1(__COMPILES__  fn(x:i32, y:i32 to i32) { 0 }  )
  expect_i1(false) ; print_i1(__COMPILES__  fn(x:i32, x:i32 to i32) { 0 }  )

  // IfAST condition must be bool
  expect_i1(true)  ; print_i1(__COMPILES__  if true then true else true  )
  expect_i1(false) ; print_i1(__COMPILES__  if  0   then true else true  )
  expect_i1(false) ; print_i1(__COMPILES__  if  0   then true else true  )

  // IfAST branches must have same type
  expect_i1(true)  ; print_i1(__COMPILES__  if true then true else true  )
  expect_i1(false) ; print_i1(__COMPILES__  if true then  0   else true  )

  // Call to non-function thing
  expect_i1(false) ; print_i1(__COMPILES__ tuple { 0 }(0))
  
  0
}

a = fn(to i32) { 0 }
b = fn(x:i32 to i32) { x }
