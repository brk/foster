snafuinclude PreludePrintExpect "prelude/print-expect";

main = {
  expect_i32 1;
  print_i32 (eta True);

  expect_i32 0;
  print_i32 (eta False);

  noinline_test-cases !;
  noinline_test-ifs   !;
};

noinline_test-cases = {
  expect_i32 2;
  z = 4;
     print_i32 (case z of 0 -> 1
                       of 4 -> 2
                       of _ -> 3
                end);

  expect_i32 3;
  z = True;
     print_i32 (case z of True  -> 3
                       of False -> 2
                end);

  expect_i32 4;
  z = False;
     print_i32 (case z of True  -> 3
                       of _     -> 4
                end);
};


noinline_test-ifs = {
  expect_i32 2;
  z = 4;
  print_i32 (if z ==Int32 4 then 2 else 3 end);

  expect_i32 3;
  z = True;
  print_i32 (if z then 3 else 2 end);
};

// Trivial testcase for combined inlining + constant propagation.
// The inlined copies of eta should reduce to simple constants,
// not control flow.

eta = { b : Bool => if b then 1 else 0 end };

