snafuinclude PreludePrintExpect "prelude/print-expect";
snafuinclude Text "text";

main = {
  expect_i1 True ; print_i1 (__COMPILES__ 0b1  );
  expect_i1 False; print_i1 (__COMPILES__ 0_1  );
  expect_i1 True ; print_i1 (__COMPILES__ 0b0  );
  expect_i1 False; print_i1 (__COMPILES__ 0b2  );
  expect_i1 False; print_i1 (__COMPILES__ 0bA  );
  expect_i1 False; print_i1 (__COMPILES__ 0hA  );
  expect_i1 True ; print_i1 (__COMPILES__ 0xA  );
  expect_i1 False; print_i1 (__COMPILES__ 0xG  );
  expect_i1 True ; print_i1 (__COMPILES__ 0x0f);
  expect_i1 True ; print_i1 (__COMPILES__ 0x1f);

  // ==== numeric representation limit tests ====
  // === base 10 ===

  expect_i1 True ; print_i1( __COMPILES__ print_i32 1234);
  expect_i1 True ; print_i1( __COMPILES__ print_i32 2147483648); // 2^31
  expect_i1 True ; print_i1( __COMPILES__ print_i32 2147483649); // 2^31 + 1
  expect_i1 True ; print_i1( __COMPILES__ print_i32 4294967295); // 2^32 - 1
  expect_i1 False; print_i1( __COMPILES__ print_i32 4294967296); // 2^32
  expect_i1 False; print_i1( __COMPILES__ print_i32 4294967297); // 2^32 + 1

  expect_i1 True;
  print_i1 (255 ==Int8 -1);

  // === base 2 ===
  expect_i1 True; print_i1( __COMPILES__ 0b1111`1111); // 8 bits
  expect_i1 True; print_i1( __COMPILES__ 0b1111`1111`1111`1111); // 16 bits

  // TODO LLVM i<n> type counts bits only
  // signedness comes from operations
    // 32 bits
  expect_i1 True ; print_i1 (__COMPILES__ print_i32   0b1111`1111`1111`1111`1111`1111`1111`1111);
    // zero + 32 bits
  expect_i1 True ; print_i1 (__COMPILES__ print_i32 0b0`1111`1111`1111`1111`1111`1111`1111`1111);
    // one + 32 bits
  expect_i1 False; print_i1 (__COMPILES__ print_i32 0b1`1111`1111`1111`1111`1111`1111`1111`1111);
};
