snafuinclude PreludePrintExpect "prelude/print-expect";
snafuinclude Text "text";

main = {
  t1 !;
  t3 !;
  t4 !;
};

t1 = {
  expect_i32 0;
  print_i32
    case T2C1 2 3
      of $T2C1 x y -> 0
    end;
};


t3 = { expect_i32 4; print_i32 (test3 (T4D 0 0)); };

test3 = { tt : T4 =>
  case tt
    of $T4A _ _ -> 1;
    of $T4B _ _ -> 3;
    of $T4C _ _ -> 1;
    of $T4D _ _ -> 4;
  end
};

// Make sure that datatypes with a single
// constructor codegen as expected.
t2 = { tt : T2 =>
  case tt of $T2C1 a b -> b; end
};

// Ensure that arity is correct when pattern matching.
t4 = {
  expect_i1 False;
  print_i1 (__COMPILES__ { tt : T2 =>
                 case tt of $T2C1 _ b _ -> b; end
           });

  expect_i1 False;
  print_i1 (__COMPILES__ case (1, 2) of (1, 2, 3) -> 1; end );
};


type case T2
  of $T2C1 Int32 Int32
;

type case T4
  of $T4A Int32 Int32
  of $T4B Int32 Int32
  of $T4C Int32 Int32
  of $T4D Int32 Int32
;
