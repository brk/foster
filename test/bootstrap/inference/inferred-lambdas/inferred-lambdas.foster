snafuinclude PreludePrintExpect "prelude/print-expect";
snafuinclude Text "text";

main = {
  f = { i => i +Int32 2 };

  expect_i32 5;
  print_i32 (f 3);

/*
  // Each binding (such as x) must be assigned a unique type,
  // either implicitly or explicitly. Here, x's type is underconstrained;
  // unlike ML and Haskell, we treat this as an error, rather than
  // triggering automatic generalization of its type.
  expect_i1 False;
  print_i1 (__COMPILES__ { x => x } );
*/

  expect_i1 True;
  print_i1 (__COMPILES__ { x : () => x } );
};
